#
# Copyright (c) 2020 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import("//build/ohos.gni")

config("hilog_dir") {
  include_dirs =
      [ "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits/hilog/" ]
}
config("hilog_lite_dir") {
  include_dirs =
      [ "//base/hiviewdfx/hilog_lite/interfaces/native/kits/hilog_lite/" ]
}

config("huks_test_common") {
  include_dirs = [
    "//base/security/huks/interfaces/inner_api/huks_standard/main/include",
    "include",
    "//base/security/huks/test/unittest/huks_common_test/include",
  ]
}

ohos_static_library("huks_3.0_test_common") {
  sources = [
    "//base/security/huks/test/unittest/huks_common_test/src/hks_test_aes_func.cpp",
    "//base/security/huks/test/unittest/huks_common_test/src/hks_test_cipher_func.cpp",
    "//base/security/huks/test/unittest/huks_common_test/src/hks_test_common_func.cpp",
    "//base/security/huks/test/unittest/huks_common_test/src/hks_test_curve25519_func.cpp",
    "//base/security/huks/test/unittest/huks_common_test/src/hks_test_file_operator_func.c",
    "hks_test_aes.c",
    "hks_test_api_performance.c",
    "hks_test_cipher.c",
    "hks_test_common.c",
    "hks_test_curve25519.c",
    "hks_test_file_operator.c",
    "hks_test_log.c",
    "hks_test_mem.c",
  ]

  deps = []

  configs = [ ":huks_test_common" ]

  if (ohos_kernel_type == "liteos_m") {
    cflags = [
      "-D_CUT_LOG_",
      "-Wall",
      "-Werror",
    ]
    configs += [ ":hilog_lite_dir" ]
    deps += [ "//base/hiviewdfx/hilog_lite/frameworks/mini:hilog_lite" ]
  } else {
    cflags = [
      "-Wall",
      "-Werror",
    ]
    configs += [ ":hilog_dir" ]
    external_deps = [ "hilog_lite:hilog_shared" ]
  }
}
