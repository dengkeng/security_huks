# Copyright (C) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/huks/build/config.gni")
import("//build/test.gni")

module_output_path = "huks_standard/huks_standard_test"

ohos_unittest("huks_multithread_test") {
  module_out_path = module_output_path

  sources = [
    "//base/security/huks/services/huks_standard/huks_service/main/core/src/hks_lock.c",
    "//base/security/huks/services/huks_standard/huks_service/main/core/src/hks_storage.c",
    "//base/security/huks/services/huks_standard/huks_service/main/core/src/hks_storage_file_lock.c",
    "//base/security/huks/services/huks_standard/huks_service/main/os_dependency/posix/hks_rwlock.c",
    "//base/security/huks/utils/file_operator/hks_file_operator.c",
    "//base/security/huks/utils/mutex/hks_mutex.c",
    "src/hks_storage_file_lock_test.cpp",
    "src/hks_storage_test.cpp",
  ]

  configs = [
    "//base/security/huks/frameworks/config/build:l2_standard_common_config",
  ]

  if (huks_security_level == "software") {
    defines = [ "HKS_UNTRUSTED_RUNNING_ENV" ]
  }

  include_dirs = [
    "//base/security/huks/frameworks/huks_standard/main/common/include",
    "//base/security/huks/services/huks_standard/huks_service/main/core/include",
    "//base/security/huks/utils/file_operator",
    "//base/security/huks/utils/mutex",
    "unittest/include",
  ]
  deps = [
    "//base/security/huks/frameworks/huks_standard/main:huks_standard_frameworks",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
}
