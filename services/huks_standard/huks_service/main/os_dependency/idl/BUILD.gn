# Copyright (C) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/huks/build/config.gni")
import("//base/security/huks/huks.gni")
import("//build/ohos.gni")

config("huks_config") {
  include_dirs = [ "ipc" ]
}

if (os_level == "standard") {
  ohos_static_library("libhuks_service_idl_standard_static") {
    subsystem_name = "security"
    part_name = "huks"
    public_configs = [ ":huks_config" ]

    include_dirs = [ "//base/security/huks/services/huks_standard/huks_service/main/os_dependency/idl/passthrough" ]

    sources = [
      "ipc/hks_ipc_serialization.c",
      "ipc/hks_ipc_service.c",
      "ipc/hks_response.cpp",
      "passthrough/huks_access.c",
      "passthrough/huks_core_dynamic_hal.c",
    ]
    deps = [
      "//base/security/huks/frameworks/huks_standard/main/common:libhuks_common_standard_static",
      "//base/security/huks/services/huks_standard/huks_service/main/core:libhuks_service_core_standard_static",
    ]

    complete_static_lib = true

    sanitize = {
      integer_overflow = true
      cfi = true
      debug = false
    }

    external_deps = [ "ipc:ipc_single" ]

    external_deps += [ "access_token:libaccesstoken_sdk" ]
    defines = []

    if (has_os_account_part) {
      external_deps += [ "os_account:os_account_innerkits" ]
      defines += [ "HAS_OS_ACCOUNT_PART" ]
    }

    configs = [
      "//base/security/huks/frameworks/config/build:l2_standard_common_config",
    ]
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  }
} else {
  ohos_static_library("libhuks_service_idl_small_static") {
    public_configs = [ ":huks_config" ]

    include_dirs = [
      "//base/security/huks/services/huks_standard/huks_service/main/os_dependency/idl/passthrough",
      "//base/security/huks/services/huks_standard/huks_service/main/os_dependency/sa/sa_mgr",
      "//base/security/huks/frameworks/huks_standard/main/os_dependency/ipc/include",
    ]
    configs = [
      "//base/security/huks/frameworks/config/build:l1_small_common_config",
    ]

    sources = [
      "ipc/hks_ipc_serialization.c",
      "ipc/hks_ipc_service.c",
      "ipc/hks_response_samgr.c",
      "passthrough/huks_access.c",
      "passthrough/huks_core_dynamic_hal.c",
    ]
    deps = [
      "//base/security/huks/frameworks/huks_standard/main/common:libhuks_common_small_static",
      "//base/security/huks/services/huks_standard/huks_service/main/core:libhuks_service_core_small_static",
    ]

    complete_static_lib = true

    deps += [
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//foundation/systemabilitymgr/samgr_lite/samgr:samgr",
    ]
  }
}
